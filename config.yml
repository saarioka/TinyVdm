runtime:
  max_threads: 'max'  # int | 'max', where 'max' means the number of cores on pc

plotting:
  fit_uncertainty: False  # A bit slow
  log_plot: True  # in addition to lin

# Fits
fitting:
  adaptive:
    pool:
      - [dg, peak_ratio]
      - [polyG4, r4]
      - [polyG2, r2]
      - [sg, null]
    parameters_significance_threshold:
      peak_ratio: [0.1, 0.9]
      r2: [-1.e+9, 1.e+9]
      r4: [-1.e+9, 1.e+9]
      r6: [-1.e+9, 1.e+9]
    chi2_threshold: 1.0e7
    require_valid: True
    require_accurate: True
    require_not_at_limit: True

  # YAML technicality: floating point numbers need the dot before 'e'
  parameter_limits:
    peak: [0, 10]
    capsigma: [1.e-3, 1]
    mean: [-1.e-1, 1.e-1]
    peak_ratio: [0, 10]
    capsigma_ratio: [0, 9]
    r2: [-0.2, 0.2]
    r4: [-0.2, 0.2]
    r6: [-0.2, 0.2]

  # peak limit auto = nominal head-on rate
  parameter_initial_values:
    sg:
      peak: auto
      mean: 0
      capsigma: auto
    sgConst:
      peak: auto
      mean: 0
      capsigma: auto
      const: 0
    dg:
      peak: auto
      mean: 0
      capsigma: auto
      peak_ratio: 0.5
      capsigma_ratio: 2
    dgConst:
      peak: auto
      mean: 0
      capsigma: auto
      peak_ratio: 0.5
      capsigma_ratio: 2
      const: 0
    polyG6:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
      r4: 0
      r6: 0
    polyG6Const:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
      r4: 0
      r6: 0
      const: 0
    polyG4:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
      r4: 0
    polyG4Const:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
      r4: 0
      const: 0
    polyG2:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
    polyG2Const:
      peak: auto
      mean: 0
      capsigma: auto
      r2: 0
      const: 0
    superG:
      peak: auto
      mean: 0
      capsigma: auto
      p: 1
    superGConst:
      peak: auto
      mean: 0
      capsigma: auto
      p: 1
      const: 0
